# 1. Kong Proxy Service (if missing)
apiVersion: v1
kind: Service
metadata:
  name: kong-cp-kong-proxy
  namespace: kong
  labels:
    app.kubernetes.io/name: kong
    app.kubernetes.io/component: proxy
spec:
  type: NodePort
  ports:
  - name: kong-proxy
    port: 8000
    targetPort: 8000
    protocol: TCP
  - name: kong-proxy-ssl
    port: 8443
    targetPort: 8443
    protocol: TCP
  selector:
    app.kubernetes.io/name: kong

---
# 2. Separate Proxy ALB Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kong-proxy-alb-ingress
  namespace: kong
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/healthcheck-path: /
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'
    alb.ingress.kubernetes.io/group.name: kong-proxy-applications
    alb.ingress.kubernetes.io/load-balancer-name: kong-proxy-apps-alb
spec:
  ingressClassName: alb
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: kong-cp-kong-proxy
            port:
              number: 8000

---
# 3. Kong Service for Jenkins
apiVersion: configuration.konghq.com/v1
kind: KongService
metadata:
  name: jenkins-kong-service
  namespace: default
  annotations:
    kubernetes.io/ingress.class: kong
spec:
  host: jenkins-service.default.svc.cluster.local
  port: 8080
  protocol: http
  path: /
  retries: 3
  connect_timeout: 60000
  read_timeout: 60000
  write_timeout: 60000

---
# 4. Kong Route for Jenkins
apiVersion: configuration.konghq.com/v1
kind: KongRoute
metadata:
  name: jenkins-kong-route
  namespace: default
  annotations:
    kubernetes.io/ingress.class: kong
spec:
  service:
    name: jenkins-kong-service
  protocols:
  - http
  paths:
  - /jenkins
  strip_path: true
  preserve_host: false

---
# 5. Kong Service for Nginx
apiVersion: configuration.konghq.com/v1
kind: KongService
metadata:
  name: nginx-kong-service
  namespace: default
  annotations:
    kubernetes.io/ingress.class: kong
spec:
  host: nginx-service.default.svc.cluster.local
  port: 80
  protocol: http
  path: /
  retries: 3
  connect_timeout: 60000
  read_timeout: 60000
  write_timeout: 60000

---
# 6. Kong Route for Nginx
apiVersion: configuration.konghq.com/v1
kind: KongRoute
metadata:
  name: nginx-kong-route
  namespace: default
  annotations:
    kubernetes.io/ingress.class: kong
spec:
  service:
    name: nginx-kong-service
  protocols:
  - http
  paths:
  - /nginx
  strip_path: true
  preserve_host: false

---
# Alternative: Using Kubernetes Ingress (if Kong CRDs don't work)
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: apps-via-kong-ingress
  namespace: default
  annotations:
    kubernetes.io/ingress.class: kong
    konghq.com/strip-path: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: kong
  rules:
  - http:
      paths:
      - path: /jenkins
        pathType: Prefix
        backend:
          service:
            name: jenkins-service
            port:
              number: 8080
      - path: /nginx
        pathType: Prefix
        backend:
          service:
            name: nginx-service
            port:
              number: 80
